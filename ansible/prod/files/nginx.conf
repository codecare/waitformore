## Version 2020/03/05 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/default

# {{ ansible_managed }}

# removed php and added upstreams

# redirect all traffic to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

# added by codecare
upstream http_backend {
	server wait4more-backend:8081;
}

# added by codecare
upstream http_frontend{
	server wait4more-frontend:6688;
}

# added by codecare
upstream http_backend-test {
    # weird workaround docker networking
    # ip is determined by DOCKER_HOST=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
    # ip will not survive restart of docker engine - which will break test!
    # server wait4more-backend-test:8082; <- did not work out well
    # better solution would be to port to traefik
    server 172.17.0.1:8082;
}

# added by codecare
upstream http_frontend-test{
	# server wait4more-frontend-test:6689;
   server 172.17.0.1:6689;
   # weird workaround docker networking - see above

}

# added by codecare
server {
    listen       443 ssl http2;
    server_name  www.wartewarte.de;
    return       301 https://wartewarte.de$request_uri;
}

# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

    # commented out by codecare - root /config/www;
    # commented out by codecare - index index.html index.htm index.php;

    # changed by codecare:
	server_name wartewarte.de;

	# enable subfolder method reverse proxy confs
	# commented out by codecare - include /config/nginx/proxy-confs/*.subfolder.conf;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# enable for ldap auth
	#include /config/nginx/ldap.conf;

	client_max_body_size 0;

    # added by codecare
	location ^~ /api/ {
        	proxy_pass         http://http_backend;
        	proxy_read_timeout 300s;
        	proxy_set_header   Host $host:$server_port;
        	proxy_set_header   X-Real-IP $remote_addr;
        	proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header   X-Forwarded-Host $server_name;
        	proxy_set_header   X-Forwarded-Proto $scheme;
      }

    # added by codecare
	location / {
	        proxy_pass         http://http_frontend;
        	proxy_read_timeout 300s;
        	proxy_set_header   Host $host:$server_port;
	}

	# commented out by codecare - location ~ \.php$ {
    # commented out by codecare - 		fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # commented out by codecare - 		fastcgi_pass 127.0.0.1:9000;
    # commented out by codecare - 		fastcgi_index index.php;
    # commented out by codecare - 		include /etc/nginx/fastcgi_params;
    # commented out by codecare - 	}


# sample reverse proxy config for password protected couchpotato running at IP 192.168.1.50 port 5050 with base url "cp"
# notice this is within the same server block as the base
# don't forget to generate the .htpasswd file as described on docker hub
#	location ^~ /cp {
#		auth_basic "Restricted";
#		auth_basic_user_file /config/nginx/.htpasswd;
#		include /config/nginx/proxy.conf;
#		proxy_pass http://192.168.1.50:5050/cp;
#	}

}

server {
    listen       443 ssl http2;
    server_name  test.wartewarte.de;

    # all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# enable for ldap auth
	#include /config/nginx/ldap.conf;

	client_max_body_size 0;

    # added by codecare
	location ^~ /api/ {
        	proxy_pass         http://http_backend-test;
        	proxy_read_timeout 300s;
        	proxy_set_header   Host $host:$server_port;
        	proxy_set_header   X-Real-IP $remote_addr;
        	proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header   X-Forwarded-Host $server_name;
        	proxy_set_header   X-Forwarded-Proto $scheme;
      }

    # added by codecare
	location / {
	        proxy_pass         http://http_frontend-test;
        	proxy_read_timeout 300s;
        	proxy_set_header   Host $host:$server_port;
	}
}

# sample reverse proxy config without url base, but as a subdomain "cp", ip and port same as above
# notice this is a new server block, you need a new server block for each subdomain
#server {
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
#
#	root /config/www;
#	index index.html index.htm index.php;
#
#	server_name cp.*;
#
#	include /config/nginx/ssl.conf;
#
#	client_max_body_size 0;
#
#	location / {
#		auth_basic "Restricted";
#		auth_basic_user_file /config/nginx/.htpasswd;
#		include /config/nginx/proxy.conf;
#		proxy_pass http://192.168.1.50:5050;
#	}
#}

# sample reverse proxy config for "heimdall" via subdomain, with ldap authentication
# ldap-auth container has to be running and the /config/nginx/ldap.conf file should be filled with ldap info
# notice this is a new server block, you need a new server block for each subdomain
#server {
#	listen 443 ssl http2;
#	listen [::]:443 ssl http2;
#
#	root /config/www;
#	index index.html index.htm index.php;
#
#	server_name heimdall.*;
#
#	include /config/nginx/ssl.conf;
#
#	include /config/nginx/ldap.conf;
#
#	client_max_body_size 0;
#
#	location / {
#		# the next two lines will enable ldap auth along with the included ldap.conf in the server block
#		auth_request /auth;
#		error_page 401 =200 /login;
#
#		include /config/nginx/proxy.conf;
#		resolver 127.0.0.11 valid=30s;
#		set $upstream_app heimdall;
#		set $upstream_port 443;
#		set $upstream_proto https;
#		proxy_pass $upstream_proto://$upstream_app:$upstream_port;
#	}
#}

# enable subdomain method reverse proxy confs
include /config/nginx/proxy-confs/*.subdomain.conf;
# enable proxy cache for auth
proxy_cache_path cache/ keys_zone=auth_cache:10m;